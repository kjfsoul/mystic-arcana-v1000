{
  "name": "mystic_arcana_v1000",
  "version": "0.1.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "next dev --turbopack",
    "auto-fix-types": "tsx scripts/auto-fix-typescript-errors.ts",
    "typecheck": "tsc --noEmit",
    "build": "next build",
    "start": "next start",
    "type-check": "tsc --noEmit",
    "check": "npm run type-check && npm run lint",
    
    "lint:strict": "eslint . --max-warnings=0",
    "lint:fix": "eslint . --fix",
    "fix-all": "npm run lint -- --fix && npm run typecheck",
    "test": "jest",
    "test:e2e": "playwright test",
    "validate:astro": "python3 scripts/validate_ephemeris.py",
    "validate:spiritual": "node scripts/validate_spiritual_references.js",
    "setup:background": "chmod +x .cursor/install.sh && ./.cursor/install.sh",
    "supabase:start": "supabase start",
    "supabase:stop": "supabase stop",
    "content:validate": "node scripts/content_generation_monitor.js",
    "seed:tarot": "npx tsx scripts/seed-tarot.ts",
    "validate:tarot": "npx tsx scripts/validate-deck.ts",
    "deck:manage": "npx tsx scripts/enhanced-deck-manager.ts",
    "test:tarot-api": "npx tsx scripts/test-tarot-endpoints.ts",
    "test:tarot": "npx tsx scripts/test-tarot-api.ts",
    "test:supermemory-integration": "npx tsx scripts/test-supermemory-integration.ts",
    "setup:tarot": "npx tsx scripts/setup-tarot-engine.ts",
    "setup:local": "npx tsx scripts/setup-local-tarot.ts",
    "email:setup": "npx tsx scripts/setup-email.ts",
    "email:start": "npx tsx scripts/email-scheduler.ts start",
    "email:test": "npx tsx scripts/email-scheduler.ts test",
    "email:urgent": "npx tsx scripts/email-scheduler.ts urgent",
    "email:send": "npx tsx src/agents/email-notifier/index.ts send",
    "astrology:setup": "./scripts/setup-astrology.sh",
    "astrology:test": "source venv-astrology/bin/activate && python src/services/astrology-python/test_basic.py",
    "astrology:test-chart": "source venv-astrology/bin/activate && python src/services/astrology-python/simple_astrology.py birth-chart '{\"name\":\"Test User\",\"birthDate\":\"1990-06-15T10:30:00\",\"city\":\"New York\",\"country\":\"USA\"}'",
    "astrology:test-transits": "source venv-astrology/bin/activate && python src/services/astrology-python/simple_astrology.py transits",
    "test:crew": "npx tsx scripts/test-crew-system.ts",
    "crew:generate": "curl -X POST http://localhost:3000/api/crew -H 'Content-Type: application/json' -d '{\"task\": \"generateCrewTarotDeck\"}'",
    "validate:einstein": "npx tsx scripts/validate-einstein-chart.ts",
    "astrology:validate": "npx tsx scripts/astrology-validation-summary.ts",
    "test:chart-component": "npx tsx scripts/test-interactive-chart.ts",
    "test:caching-einstein": "npx tsx scripts/test-caching-einstein.ts",
    "lint:quiet": "eslint . --max-warnings=100",
    "deploy": "vercel --archive=tgz",
    "deploy:prod": "vercel --archive=tgz --prod",
    "oracle:activate": "npx tsx scripts/run-data-oracle.ts",
    "oracle:status": "npx tsx -e \"import {DataOracleAgent} from './src/agents/DataOracle'; const oracle = new DataOracleAgent(); oracle.getStatus().then(s => console.log(JSON.stringify(s, null, 2)))\"",
    "oracle:ingest": "npx tsx scripts/run-ingestion-pipeline.ts",
    "oracle:search": "npx tsx -e \"import {DataOracleAgent} from './src/agents/DataOracle'; const oracle = new DataOracleAgent(); oracle.searchKnowledgeGraph(process.argv[3] || 'fool').then(r => console.log('Found:', r.length, 'results'))\"",
    "oracle:demo": "npx tsx scripts/demo-data-oracle.ts",
    "oracle:ingest:dry": "npx tsx scripts/run-ingestion-pipeline.ts --dry-run",
    "oracle:ingest:sample": "npx tsx scripts/run-ingestion-pipeline.ts --source=biddy-tarot --max=3",
    "test:oracle": "jest src/agents/__tests__/DataOracle.test.ts",
    "test:kg-ingestion": "npx tsx scripts/test-knowledge-ingestion.ts",
    "test:kg-demo": "npx tsx scripts/test-knowledge-ingestion-demo.ts",
    "test:kg-full": "npm run test:kg-ingestion",
    "prepare": "husky"
  },
  "dependencies": {
    "@ag-ui/core": "^0.0.28",
    "@ant-design/icons": "^6.0.0",
    "@modelcontextprotocol/sdk": "^1.12.3",
    "@stripe/stripe-js": "^7.5.0",
    "@supabase/auth-ui-react": "^0.4.7",
    "@supabase/auth-ui-shared": "^0.1.8",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.53.0",
    "@types/cheerio": "^0.22.35",
    "@types/ioredis": "^4.28.10",
    "@types/nodemailer": "^6.4.17",
    "@types/redis": "^4.0.10",
    "@types/three": "^0.179.0",
    "@vercel/analytics": "^1.5.0",
    "antd": "^5.25.3",
    "astronomy-engine": "^2.1.19",
    "axios": "^1.11.0",
    "canvas": "^2.11.2",
    "cheerio": "^1.1.2",
    "compromise": "^14.14.4",
    "date-fns": "^4.1.0",
    "dotenv": "^16.6.1",
    "express": "^5.1.0",
    "firebase": "^12.0.0",
    "firecrawl": "^1.29.3",
    "framer-motion": "^12.18.1",
    "ioredis": "^5.7.0",
    "lucide-react": "^0.525.0",
    "natural": "^8.1.0",
    "next": "15.3.3",
    "node-html-parser": "^7.0.1",
    "nodemailer": "^7.0.3",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-markdown": "^9.1.0",
    "redis": "^5.8.0",
    "remark-gfm": "^4.0.1",
    "stripe": "^18.3.0",
    "three": "^0.179.1",
    "vercel": "^44.7.0",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@eslint/js": "^9.32.0",
    "@next/eslint-plugin-next": "^15.4.5",
    "@playwright/test": "^1.53.1",
    "@testing-library/jest-dom": "^6.6.3",
    "@types/jest": "^30.0.0",
    "@types/node": "^20.19.9",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "autoprefixer": "^10.4.21",
    "concurrently": "^9.2.0",
    "eslint": "^9",
    "eslint-config-next": "^15.4.5",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "lint-staged": "^16.1.4",
    "postcss": "^8.5.6",
    "tailwindcss": "^3.4.17",
    "ts-jest": "^29.4.0",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.3",
    "typescript": "^5.8.3"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ]
  }
}
